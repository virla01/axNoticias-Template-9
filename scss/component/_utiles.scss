.align-baseline    { vertical-align: baseline !important; } // Browser default
.align-top         { vertical-align: top !important; }
.align-middle      { vertical-align: middle !important; }
.align-bottom      { vertical-align: bottom !important; }
.align-text-bottom { vertical-align: text-bottom !important; }
.align-text-top    { vertical-align: text-top !important; }

@each $color, $value in $theme-colors {
    @include bg-variant(".bg-#{$color}", $value);
}


@each $color, $value in $theme-colors {
    @include bg-gradient-variant(".bg-gradient-#{$color}", $value);
}

.bg-white {
    background-color: $white !important;
}

.bg-transparent {
    background-color: transparent !important;
}

.border         { border: 1px solid $border-color !important; }
.border-top     { border-top: 1px solid $border-color !important; }
.border-right   { border-right: 1px solid $border-color !important; }
.border-bottom  { border-bottom: 1px solid $border-color !important; }
.border-left    { border-left: 1px solid $border-color !important; }

.border-0        { border: 0 !important; }
.border-top-0    { border-top: 0 !important; }
.border-right-0  { border-right: 0 !important; }
.border-bottom-0 { border-bottom: 0 !important; }
.border-left-0   { border-left: 0 !important; }

@each $color, $value in $theme-colors {
    .border-#{$color} {
        border-color: $value !important;
    }
}

.border-white {
    border-color: $white !important;
}

.pildora {
    border-radius: $border-radius-pill !important;
}

.rounded {
    border-radius: $border-radius !important;
}

.rounded-top {
    border-top-left-radius: $border-radius !important;
    border-top-right-radius: $border-radius !important;
}

.rounded-right {
    border-top-right-radius: $border-radius !important;
    border-bottom-right-radius: $border-radius !important;
}

.rounded-bottom {
    border-bottom-right-radius: $border-radius !important;
    border-bottom-left-radius: $border-radius !important;
}

.rounded-left {
    border-top-left-radius: $border-radius !important;
    border-bottom-left-radius: $border-radius !important;
}

.rounded-circle {
    border-radius: 50% !important;
}

.rounded-0 {
    border-radius: 0 !important;
}

.clearfix {
    &::after {
        display: block;
        clear: both;
        content: "";
    }
}

@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .d#{$infix}-none         { display: none !important; }
        .d#{$infix}-inline       { display: inline !important; }
        .d#{$infix}-inline-block { display: inline-block !important; }
        .d#{$infix}-block        { display: block !important; }
        .d#{$infix}-table        { display: table !important; }
        .d#{$infix}-table-row    { display: table-row !important; }
        .d#{$infix}-table-cell   { display: table-cell !important; }
        .d#{$infix}-flex         { display: flex !important; }
        .d#{$infix}-inline-flex  { display: inline-flex !important; }
    }
}

@media print {
    .d-print-none         { display: none !important; }
    .d-print-inline       { display: inline !important; }
    .d-print-inline-block { display: inline-block !important; }
    .d-print-block        { display: block !important; }
    .d-print-table        { display: table !important; }
    .d-print-table-row    { display: table-row !important; }
    .d-print-table-cell   { display: table-cell !important; }
    .d-print-flex         { display: flex !important; }
    .d-print-inline-flex  { display: inline-flex !important; }
}

.embed-responsive {
    position: relative;
    display: block;
    width: 100%;
    padding: 0;
    overflow: hidden;

    &::before {
        display: block;
        content: "";
    }

    .embed-responsive-item,
        iframe,
        embed,
        object,
        video {
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border: 0;
        }
}

.embed-responsive-21by9 {
    &::before {
        padding-top: percentage(9 / 21);
    }
}

.embed-responsive-16by9 {
    &::before {
        padding-top: percentage(9 / 16);
    }
}

.embed-responsive-4by3 {
    &::before {
        padding-top: percentage(3 / 4);
    }
}

.embed-responsive-1by1 {
    &::before {
        padding-top: percentage(1 / 1);
    }
}

@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .flex#{$infix}-row            { flex-direction: row !important; }
        .flex#{$infix}-column         { flex-direction: column !important; }
        .flex#{$infix}-row-reverse    { flex-direction: row-reverse !important; }
        .flex#{$infix}-column-reverse { flex-direction: column-reverse !important; }

        .flex#{$infix}-wrap         { flex-wrap: wrap !important; }
        .flex#{$infix}-nowrap       { flex-wrap: nowrap !important; }
        .flex#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }
        .flex#{$infix}-fill         { flex: 1 1 auto !important; }
        .flex#{$infix}-grow-0       { flex-grow: 0 !important; }
        .flex#{$infix}-grow-1       { flex-grow: 1 !important; }
        .flex#{$infix}-shrink-0     { flex-shrink: 0 !important; }
        .flex#{$infix}-shrink-1     { flex-shrink: 1 !important; }

        .justify-content#{$infix}-start   { justify-content: flex-start !important; }
        .justify-content#{$infix}-end     { justify-content: flex-end !important; }
        .justify-content#{$infix}-center  { justify-content: center !important; }
        .justify-content#{$infix}-between { justify-content: space-between !important; }
        .justify-content#{$infix}-around  { justify-content: space-around !important; }

        .align-items#{$infix}-start    { align-items: flex-start !important; }
        .align-items#{$infix}-end      { align-items: flex-end !important; }
        .align-items#{$infix}-center   { align-items: center !important; }
        .align-items#{$infix}-baseline { align-items: baseline !important; }
        .align-items#{$infix}-stretch  { align-items: stretch !important; }

        .align-content#{$infix}-start   { align-content: flex-start !important; }
        .align-content#{$infix}-end     { align-content: flex-end !important; }
        .align-content#{$infix}-center  { align-content: center !important; }
        .align-content#{$infix}-between { align-content: space-between !important; }
        .align-content#{$infix}-around  { align-content: space-around !important; }
        .align-content#{$infix}-stretch { align-content: stretch !important; }

        .align-self#{$infix}-auto     { align-self: auto !important; }
        .align-self#{$infix}-start    { align-self: flex-start !important; }
        .align-self#{$infix}-end      { align-self: flex-end !important; }
        .align-self#{$infix}-center   { align-self: center !important; }
        .align-self#{$infix}-baseline { align-self: baseline !important; }
        .align-self#{$infix}-stretch  { align-self: stretch !important; }
    }
}

@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .float#{$infix}-left  { float: left !important; }
        .float#{$infix}-right { float: right !important; }
        .float#{$infix}-none  { float: none !important; }
    }
}

$positions: static, relative, absolute, fixed, sticky;

@each $position in $positions {
    .position-#{$position} { position: $position !important; }
}

.fixed-top {
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    z-index: $zindex-fixed;
}

.fixed-bottom {
    position: fixed;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: $zindex-fixed;
}

.sticky-top {
    @supports (position: sticky) {
        position: sticky;
        top: 0;
        z-index: $zindex-sticky;
    }
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

.sr-only-focusable {
    &:active,
    &:focus {
        position: static;
        width: auto;
        height: auto;
        overflow: visible;
        clip: auto;
        white-space: normal;
    }
}

.shadow-sm { box-shadow: $box-shadow-sm !important; }
.shadow { box-shadow: $box-shadow !important; }
.shadow-lg { box-shadow: $box-shadow-lg !important; }
.shadow-none { box-shadow: none !important; }

@each $prop, $abbrev in (width: w, height: h) {
    @each $size, $length in $sizes {
        .#{$abbrev}-#{$size} { #{$prop}: $length !important; }
    }
}

.mw-100 { max-width: 100% !important; }
.mh-100 { max-height: 100% !important; }

@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        @each $prop, $abbrev in (margin: m, padding: p) {
            @each $size, $length in $spacers {
                .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
                .#{$abbrev}-t#{$infix}-#{$size},
                .#{$abbrev}-y#{$infix}-#{$size} {
                    #{$prop}-top: $length !important;
                }
                .#{$abbrev}-r#{$infix}-#{$size},
                .#{$abbrev}-x#{$infix}-#{$size} {
                    #{$prop}-right: $length !important;
                }
                .#{$abbrev}-b#{$infix}-#{$size},
                .#{$abbrev}-y#{$infix}-#{$size} {
                    #{$prop}-bottom: $length !important;
                }
                .#{$abbrev}-l#{$infix}-#{$size},
                .#{$abbrev}-x#{$infix}-#{$size} {
                    #{$prop}-left: $length !important;
                }
            }
        }

        .m-#{$infix}-auto { margin: auto !important; }
        .m-t#{$infix}-auto,
        .m-y#{$infix}-auto {
                margin-top: auto !important;
        }
        .m-r#{$infix}-auto,
        .m-x#{$infix}-auto {
                margin-right: auto !important;
        }
        .m-b#{$infix}-auto,
        .m-y#{$infix}-auto {
                margin-bottom: auto !important;
        }
        .m-l#{$infix}-auto,
        .m-x#{$infix}-auto {
                margin-left: auto !important;
        }
    }
}


.text-monospace { font-family: $font-family-monospace; }

.text-justify  { text-align: justify !important; }
.text-nowrap   { white-space: nowrap !important; }
.text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .text#{$infix}-left   { text-align: left !important; }
        .text#{$infix}-right  { text-align: right !important; }
        .text#{$infix}-center { text-align: center !important; }
    }
}

.text-lowercase  { text-transform: lowercase !important; }
.text-uppercase  { text-transform: uppercase !important; }
.text-capitalize { text-transform: capitalize !important; }

.font-weight-light  { font-weight: $font-weight-light !important; }
.font-weight-normal { font-weight: $font-weight-normal !important; }
.font-weight-bold   { font-weight: $font-weight-bold !important; }
.font-italic        { font-style: italic !important; }

.text-white { color: $white !important; }

@each $color, $value in $theme-colors {
    @include text-emphasis-variant(".text-#{$color}", $value);
}

.text-body { color: $body-color !important; }
.text-muted { color: $text-muted !important; }

.text-black-50 { color: rgba($black, .5) !important; }
.text-white-50 { color: rgba($white, .5) !important; }

.text-hide {
    font: 0/0 a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

.visible {
    visibility: visible !important;
}

.invisible {
    visibility: hidden !important;
}

.transparent{
    line-height: 1.7;
    text-decoration: none;
    color: rgba(0, 0, 0, 0.3)!important;
    padding: 4.2px 6px 3px 6px!important;
    -o-transition: all 0.3s linear !important;
    -webkit-transition: all 0.3s linear !important;
    -moz-transition: all 0.3s linear !important;
    transition: all 0.3s linear !important;
}

.transparent:hover{
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 20px;
    -webkit-box-shadow: inset 2px 2px 2px 0px rgba(0,0,0,.2),
        inset -2px -2px 2px 0px rgba(255,255,255,0.2);
    -moz-box-shadow: inset 2px 2px 2px 0px rgba(0,0,0,.2),
        inset -2px -2px 2px 0px rgba(255,255,255,0.2);
    box-shadow: inset 2px 2px 2px 0px rgba(0,0,0,.2),
        inset -2px -2px 2px 0px rgba(255,255,255,0.2);
}

input.transparent, select.transparent, textarea.transparent {
    background-color: transparent !important;
    border-top: 0px solid transparent !important;
    border-left: 0px solid transparent !important;
    border-right: 0px solid transparent !important;
    border-bottom: 1px solid #CCCCCC;
}

input.transparent:hover, select.transparent:hover, textarea.transparent:hover {
    background-color: rgba(0, 0, 0, 0.05) !important;
    border-radius: 1.563rem;
}

.circle{
    width: 32px;
    height: 32px;
    padding: 3px!important;
    line-height: 1.5;
}

.circle:hover{
    border-radius: 100%;
}

.circle i.fa,.circle i.ax{
    margin-right: 0px;
}
